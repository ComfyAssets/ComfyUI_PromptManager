[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "promptmanager"
description = "A powerful ComfyUI custom node that extends the standard text encoder with persistent prompt storage, advanced search capabilities, and an automatic image gallery system using SQLite."
version = "3.0.21"
license = {file = "LICENSE"}
dependencies = [
    "# Core dependencies for PromptManager",
    "# Note: Most dependencies are already included with ComfyUI",
    "# Already included with Python standard library:",
    "# - sqlite3",
    "# - hashlib", 
    "# - json",
    "# - datetime",
    "# - os",
    "# - typing",
    "# - threading",
    "# - uuid",
    "# Required for gallery functionality:",
    "watchdog>=2.1.0              # For file system monitoring",
    "Pillow>=8.0.0                # For image metadata extraction (usually included with ComfyUI)",
    "# Optional dependencies for enhanced search functionality:",
    "# fuzzywuzzy[speedup]>=0.18.0  # For fuzzy string matching (optional)",
    "# sqlalchemy>=1.4.0            # For advanced ORM features (optional)",
    "# Development dependencies (optional):",
    "# pytest>=6.0.0                # For running tests",
    "# black>=22.0.0                # For code formatting", 
    "# flake8>=4.0.0                # For linting",
    "# mypy>=0.910                   # For type checking"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "coverage[toml]>=7.0.0",
    "fastapi[all]>=0.100.0",
    "httpx>=0.24.0",
    "websockets>=11.0.0",
    "opencv-python>=4.5.0"
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "coverage>=7.0.0",
    "httpx>=0.24.0"
]

[project.urls]
Repository = "https://github.com/ComfyAssets/ComfyUI_PromptManager"

[tool.comfy]
PublisherId = "kiko9"
DisplayName = "ComfyUI_PromptManager"
Icon = "https://avatars.githubusercontent.com/u/213204677?s=200"

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--durations=10"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning", 
    "ignore::UserWarning:PIL.*",
    "error::sqlalchemy.exc.SAWarning"
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (database, API)",
    "e2e: End-to-end tests (full workflow)",
    "slow: Tests that take more than 1 second",
    "database: Tests requiring database operations", 
    "api: Tests for API endpoints",
    "websocket: Tests for WebSocket functionality",
    "filesystem: Tests involving file system operations",
    "image_processing: Tests for image/metadata operations",
    "comfyui: Tests requiring ComfyUI integration"
]
timeout = 300
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*", 
    "*/env/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/conftest.py",
    "*/.tox/*",
    "*/node_modules/*"
]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
    "\\.logger\\.(debug|info|warning|error|critical)"
]
ignore_errors = true
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"
title = "ComfyUI PromptManager Test Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | node_modules
  | venv
  | env
)/
'''

# isort configuration 
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]
skip = [
    ".git",
    "__pycache__", 
    "venv",
    "env",
    "migrations",
    "node_modules"
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "PIL.*",
    "cv2.*", 
    "watchdog.*",
    "fastapi.*",
    "websockets.*"
]
ignore_missing_imports = true

# Flake8 configuration (in setup.cfg due to flake8 limitations)
# See .flake8 file for flake8 configuration